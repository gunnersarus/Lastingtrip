yarn run v1.22.22
$ nodemon server.js
[33m[nodemon] 3.1.6[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node server.js`[39m
/projects/public
App listening on http://localhost:3030
Executing (default): SELECT 1+1 AS result
Connection to the database has been established successfully.
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
yarn run v1.22.22
$ nodemon server.js
[33m[nodemon] 3.1.6[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node server.js`[39m
/projects/public
App listening on http://localhost:3030
Executing (default): SELECT 1+1 AS result
Connection to the database has been established successfully.
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
yarn run v1.22.22
$ nodemon server.js
[33m[nodemon] 3.1.6[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node server.js`[39m
/projects/public
App listening on http://localhost:3030
Executing (default): SELECT 1+1 AS result
Connection to the database has been established successfully.
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
yarn run v1.22.22
$ nodemon server.js
[33m[nodemon] 3.1.6[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node server.js`[39m
/projects/public
App listening on http://localhost:3030
Executing (default): SELECT 1+1 AS result
Connection to the database has been established successfully.
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
/projects/public
App listening on http://localhost:3030
Executing (default): SELECT 1+1 AS result
Connection to the database has been established successfully.
yarn run v1.22.22
$ nodemon server.js
[33m[nodemon] 3.1.6[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node server.js`[39m
/projects/public
App listening on http://localhost:3030
Executing (default): SELECT 1+1 AS result
Connection to the database has been established successfully.
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
>>>>check abc<<<<<< {
  id: '103858586135283261590',
  displayName: 'Trung Thành',
  name: { familyName: 'Thành', givenName: 'Trung' },
  emails: [ { value: 'thanhptt1337@gmail.com', verified: true } ],
  photos: [
    {
      value: 'https://lh3.googleusercontent.com/a/ACg8ocKYedEIvtPbOxCIONZjjaaavpnvLUOBvrtc2hOABVV3D-bJtw=s96-c'
    }
  ],
  provider: 'google',
  _raw: '{\n' +
    '  "sub": "103858586135283261590",\n' +
    '  "name": "Trung Thành",\n' +
    '  "given_name": "Trung",\n' +
    '  "family_name": "Thành",\n' +
    '  "picture": "https://lh3.googleusercontent.com/a/ACg8ocKYedEIvtPbOxCIONZjjaaavpnvLUOBvrtc2hOABVV3D-bJtw\\u003ds96-c",\n' +
    '  "email": "thanhptt1337@gmail.com",\n' +
    '  "email_verified": true\n' +
    '}',
  _json: {
    sub: '103858586135283261590',
    name: 'Trung Thành',
    given_name: 'Trung',
    family_name: 'Thành',
    picture: 'https://lh3.googleusercontent.com/a/ACg8ocKYedEIvtPbOxCIONZjjaaavpnvLUOBvrtc2hOABVV3D-bJtw=s96-c',
    email: 'thanhptt1337@gmail.com',
    email_verified: true
  }
}
Executing (78ffabc1-f576-400a-b2e8-4f42b1667f19): START TRANSACTION;
Executing (78ffabc1-f576-400a-b2e8-4f42b1667f19): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`authGgId` = '103858586135283261590' AND `User`.`authType` = 'google' LIMIT 1;
Executing (78ffabc1-f576-400a-b2e8-4f42b1667f19): INSERT INTO `Users` (`id`,`name`,`email`,`authGgId`,`authType`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (78ffabc1-f576-400a-b2e8-4f42b1667f19): COMMIT;
New user created User {
  dataValues: {
    id: 31,
    authType: 'google',
    email: 'thanhptt1337@gmail.com',
    authGgId: '103858586135283261590',
    name: 'Trung Thành',
    updatedAt: 2024-12-06T08:49:21.366Z,
    createdAt: 2024-12-06T08:49:21.366Z
  },
  _previousDataValues: {
    authType: 'google',
    email: 'thanhptt1337@gmail.com',
    authGgId: '103858586135283261590',
    name: 'Trung Thành',
    id: 31,
    password: undefined,
    numberPhone: undefined,
    birthDate: undefined,
    gender: undefined,
    type: undefined,
    cccd: undefined,
    address: undefined,
    url: undefined,
    token: undefined,
    createdAt: 2024-12-06T08:49:21.366Z,
    updatedAt: 2024-12-06T08:49:21.366Z
  },
  uniqno: 1,
  _changed: Set(0) {},
  _options: {
    isNewRecord: true,
    _schema: null,
    _schemaDelimiter: '',
    attributes: undefined,
    include: undefined,
    raw: undefined,
    silent: undefined
  },
  isNewRecord: false
}
Profile User {
  dataValues: {
    id: 31,
    authType: 'google',
    email: 'thanhptt1337@gmail.com',
    authGgId: '103858586135283261590',
    name: 'Trung Thành',
    updatedAt: 2024-12-06T08:49:21.366Z,
    createdAt: 2024-12-06T08:49:21.366Z
  },
  _previousDataValues: {
    authType: 'google',
    email: 'thanhptt1337@gmail.com',
    authGgId: '103858586135283261590',
    name: 'Trung Thành',
    id: 31,
    password: undefined,
    numberPhone: undefined,
    birthDate: undefined,
    gender: undefined,
    type: undefined,
    cccd: undefined,
    address: undefined,
    url: undefined,
    token: undefined,
    createdAt: 2024-12-06T08:49:21.366Z,
    updatedAt: 2024-12-06T08:49:21.366Z
  },
  uniqno: 1,
  _changed: Set(0) {},
  _options: {
    isNewRecord: true,
    _schema: null,
    _schemaDelimiter: '',
    attributes: undefined,
    include: undefined,
    raw: undefined,
    silent: undefined
  },
  isNewRecord: false
}
<<check body>>>> {
  email: 'thanhptt1337@gmail.com',
  name: 'Trung Thành',
  authGgId: 31,
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo'
}
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`email` = 'thanhptt1337@gmail.com' LIMIT 1;
check userrrrrrrrrrrrr User {
  dataValues: {
    id: 31,
    name: 'Trung Thành',
    email: 'thanhptt1337@gmail.com',
    password: null,
    numberPhone: null,
    birthDate: null,
    gender: null,
    type: 'client',
    cccd: null,
    address: null,
    url: 'https://phongreviews.com/wp-content/uploads/2022/11/avatar-facebook-mac-dinh-19.jpg',
    token: null,
    authGgId: '103858586135283261590',
    authType: 'google',
    createdAt: 2024-12-06T08:49:21.000Z,
    updatedAt: 2024-12-06T08:49:21.000Z
  },
  _previousDataValues: {
    id: 31,
    name: 'Trung Thành',
    email: 'thanhptt1337@gmail.com',
    password: null,
    numberPhone: null,
    birthDate: null,
    gender: null,
    type: 'client',
    cccd: null,
    address: null,
    url: 'https://phongreviews.com/wp-content/uploads/2022/11/avatar-facebook-mac-dinh-19.jpg',
    token: null,
    authGgId: '103858586135283261590',
    authType: 'google',
    createdAt: 2024-12-06T08:49:21.000Z,
    updatedAt: 2024-12-06T08:49:21.000Z
  },
  uniqno: 1,
  _changed: Set(0) {},
  _options: {
    isNewRecord: false,
    _schema: null,
    _schemaDelimiter: '',
    raw: true,
    attributes: [
      'id',          'name',
      'email',       'password',
      'numberPhone', 'birthDate',
      'gender',      'type',
      'cccd',        'address',
      'url',         'token',
      'authGgId',    'authType',
      'createdAt',   'updatedAt'
    ]
  },
  isNewRecord: false
}
Executing (default): UPDATE `Users` SET `token`=?,`updatedAt`=? WHERE `id` = ?
API response: { message: 'Internal server error', error: 'created is not defined' }
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw'
}
ok
Decode: { userId: 31, name: 'Trung Thành', iat: 1733474961, exp: 1733475861 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
>>>>check abc<<<<<< {
  id: '111611747582701534143',
  displayName: 'Thảo Trịnh',
  name: { familyName: 'Trịnh', givenName: 'Thảo' },
  emails: [ { value: 'thieukhanhvu11204@gmail.com', verified: true } ],
  photos: [
    {
      value: 'https://lh3.googleusercontent.com/a/ACg8ocJ6jM4uQe5gHZwouQd2W4EFWckGMdbePt4Ran9rSCnaNPtGcyzU=s96-c'
    }
  ],
  provider: 'google',
  _raw: '{\n' +
    '  "sub": "111611747582701534143",\n' +
    '  "name": "Thảo Trịnh",\n' +
    '  "given_name": "Thảo",\n' +
    '  "family_name": "Trịnh",\n' +
    '  "picture": "https://lh3.googleusercontent.com/a/ACg8ocJ6jM4uQe5gHZwouQd2W4EFWckGMdbePt4Ran9rSCnaNPtGcyzU\\u003ds96-c",\n' +
    '  "email": "thieukhanhvu11204@gmail.com",\n' +
    '  "email_verified": true\n' +
    '}',
  _json: {
    sub: '111611747582701534143',
    name: 'Thảo Trịnh',
    given_name: 'Thảo',
    family_name: 'Trịnh',
    picture: 'https://lh3.googleusercontent.com/a/ACg8ocJ6jM4uQe5gHZwouQd2W4EFWckGMdbePt4Ran9rSCnaNPtGcyzU=s96-c',
    email: 'thieukhanhvu11204@gmail.com',
    email_verified: true
  }
}
Executing (828a9d92-6948-44b7-85dd-ff01f7b01944): START TRANSACTION;
Executing (828a9d92-6948-44b7-85dd-ff01f7b01944): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`authGgId` = '111611747582701534143' AND `User`.`authType` = 'google' LIMIT 1;
Executing (828a9d92-6948-44b7-85dd-ff01f7b01944): INSERT INTO `Users` (`id`,`name`,`email`,`authGgId`,`authType`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (828a9d92-6948-44b7-85dd-ff01f7b01944): COMMIT;
New user created User {
  dataValues: {
    id: 32,
    authType: 'google',
    email: 'thieukhanhvu11204@gmail.com',
    authGgId: '111611747582701534143',
    name: 'Thảo Trịnh',
    updatedAt: 2024-12-06T08:50:18.639Z,
    createdAt: 2024-12-06T08:50:18.639Z
  },
  _previousDataValues: {
    authType: 'google',
    email: 'thieukhanhvu11204@gmail.com',
    authGgId: '111611747582701534143',
    name: 'Thảo Trịnh',
    id: 32,
    password: undefined,
    numberPhone: undefined,
    birthDate: undefined,
    gender: undefined,
    type: undefined,
    cccd: undefined,
    address: undefined,
    url: undefined,
    token: undefined,
    createdAt: 2024-12-06T08:50:18.639Z,
    updatedAt: 2024-12-06T08:50:18.639Z
  },
  uniqno: 1,
  _changed: Set(0) {},
  _options: {
    isNewRecord: true,
    _schema: null,
    _schemaDelimiter: '',
    attributes: undefined,
    include: undefined,
    raw: undefined,
    silent: undefined
  },
  isNewRecord: false
}
Profile User {
  dataValues: {
    id: 32,
    authType: 'google',
    email: 'thieukhanhvu11204@gmail.com',
    authGgId: '111611747582701534143',
    name: 'Thảo Trịnh',
    updatedAt: 2024-12-06T08:50:18.639Z,
    createdAt: 2024-12-06T08:50:18.639Z
  },
  _previousDataValues: {
    authType: 'google',
    email: 'thieukhanhvu11204@gmail.com',
    authGgId: '111611747582701534143',
    name: 'Thảo Trịnh',
    id: 32,
    password: undefined,
    numberPhone: undefined,
    birthDate: undefined,
    gender: undefined,
    type: undefined,
    cccd: undefined,
    address: undefined,
    url: undefined,
    token: undefined,
    createdAt: 2024-12-06T08:50:18.639Z,
    updatedAt: 2024-12-06T08:50:18.639Z
  },
  uniqno: 1,
  _changed: Set(0) {},
  _options: {
    isNewRecord: true,
    _schema: null,
    _schemaDelimiter: '',
    attributes: undefined,
    include: undefined,
    raw: undefined,
    silent: undefined
  },
  isNewRecord: false
}
<<check body>>>> {
  email: 'thieukhanhvu11204@gmail.com',
  name: 'Thảo Trịnh',
  authGgId: 32,
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU'
}
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`email` = 'thieukhanhvu11204@gmail.com' LIMIT 1;
check userrrrrrrrrrrrr User {
  dataValues: {
    id: 32,
    name: 'Thảo Trịnh',
    email: 'thieukhanhvu11204@gmail.com',
    password: null,
    numberPhone: null,
    birthDate: null,
    gender: null,
    type: 'client',
    cccd: null,
    address: null,
    url: 'https://phongreviews.com/wp-content/uploads/2022/11/avatar-facebook-mac-dinh-19.jpg',
    token: null,
    authGgId: '111611747582701534143',
    authType: 'google',
    createdAt: 2024-12-06T08:50:18.000Z,
    updatedAt: 2024-12-06T08:50:18.000Z
  },
  _previousDataValues: {
    id: 32,
    name: 'Thảo Trịnh',
    email: 'thieukhanhvu11204@gmail.com',
    password: null,
    numberPhone: null,
    birthDate: null,
    gender: null,
    type: 'client',
    cccd: null,
    address: null,
    url: 'https://phongreviews.com/wp-content/uploads/2022/11/avatar-facebook-mac-dinh-19.jpg',
    token: null,
    authGgId: '111611747582701534143',
    authType: 'google',
    createdAt: 2024-12-06T08:50:18.000Z,
    updatedAt: 2024-12-06T08:50:18.000Z
  },
  uniqno: 1,
  _changed: Set(0) {},
  _options: {
    isNewRecord: false,
    _schema: null,
    _schemaDelimiter: '',
    raw: true,
    attributes: [
      'id',          'name',
      'email',       'password',
      'numberPhone', 'birthDate',
      'gender',      'type',
      'cccd',        'address',
      'url',         'token',
      'authGgId',    'authType',
      'createdAt',   'updatedAt'
    ]
  },
  isNewRecord: false
}
Executing (default): UPDATE `Users` SET `token`=?,`updatedAt`=? WHERE `id` = ?
API response: { message: 'Internal server error', error: 'created is not defined' }
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '115.78.13.71',
  'x-forwarded-for': '115.78.13.71',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,vi;q=0.8',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU; _csrf=6TmPnOrRhLVZVFd3qwQTsDe3; connect.sid=s%3ATIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH%2F%2B%2FsSBrN%2BxuIc'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU',
  _csrf: '6TmPnOrRhLVZVFd3qwQTsDe3',
  'connect.sid': 's:TIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH/+/sSBrN+xuIc'
}
ok
Decode: { userId: 32, name: 'Thảo Trịnh', iat: 1733475018, exp: 1733475918 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 32;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '1.55.80.26',
  'x-forwarded-for': '1.55.80.26',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/userInfor',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,vi;q=0.8',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU; _csrf=6TmPnOrRhLVZVFd3qwQTsDe3; connect.sid=s%3ATIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH%2F%2B%2FsSBrN%2BxuIc',
  'if-none-match': 'W/"185-PLyrMRiG1or+MQtHSs53pzHBc/0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU',
  _csrf: '6TmPnOrRhLVZVFd3qwQTsDe3',
  'connect.sid': 's:TIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH/+/sSBrN+xuIc'
}
ok
Decode: { userId: 32, name: 'Thảo Trịnh', iat: 1733475018, exp: 1733475918 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 32;
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '1.55.80.26',
  'x-forwarded-for': '1.55.80.26',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/userInfor',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,vi;q=0.8',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU; _csrf=6TmPnOrRhLVZVFd3qwQTsDe3; connect.sid=s%3ATIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH%2F%2B%2FsSBrN%2BxuIc',
  'if-none-match': 'W/"185-PLyrMRiG1or+MQtHSs53pzHBc/0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU',
  _csrf: '6TmPnOrRhLVZVFd3qwQTsDe3',
  'connect.sid': 's:TIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH/+/sSBrN+xuIc'
}
ok
Decode: { userId: 32, name: 'Thảo Trịnh', iat: 1733475018, exp: 1733475918 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 32;
Executing (default): SELECT `id`, `room_id`, `user_id`, `hotel_id`, `check_in_date`, `check_out_date`, `total_price`, `status`, `special_requests`, `full_name`, `quantity`, `createdAt`, `updatedAt` FROM `Bookings` AS `Booking` WHERE `Booking`.`user_id` = '32';
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '115.78.13.71',
  'x-forwarded-for': '115.78.13.71',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,vi;q=0.8',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU; _csrf=6TmPnOrRhLVZVFd3qwQTsDe3; connect.sid=s%3ATIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH%2F%2B%2FsSBrN%2BxuIc',
  'if-none-match': 'W/"185-PLyrMRiG1or+MQtHSs53pzHBc/0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU',
  _csrf: '6TmPnOrRhLVZVFd3qwQTsDe3',
  'connect.sid': 's:TIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH/+/sSBrN+xuIc'
}
ok
Decode: { userId: 32, name: 'Thảo Trịnh', iat: 1733475018, exp: 1733475918 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 32;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
undefined
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `HotelAmenities`.`id` AS `HotelAmenities.id`, `HotelAmenities`.`hotelId` AS `HotelAmenities.hotelId`, `HotelAmenities`.`amenityId` AS `HotelAmenities.amenityId`, `HotelAmenities`.`createdAt` AS `HotelAmenities.createdAt`, `HotelAmenities`.`updatedAt` AS `HotelAmenities.updatedAt`, `HotelAmenities->Amenity`.`id` AS `HotelAmenities.Amenity.id`, `HotelAmenities->Amenity`.`name` AS `HotelAmenities.Amenity.name`, `HotelAmenities->Amenity`.`class` AS `HotelAmenities.Amenity.class`, `HotelAmenities->Amenity`.`type` AS `HotelAmenities.Amenity.type`, `HotelAmenities->Amenity`.`createdAt` AS `HotelAmenities.Amenity.createdAt`, `HotelAmenities->Amenity`.`updatedAt` AS `HotelAmenities.Amenity.updatedAt`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `HotelAmenities` AS `HotelAmenities` ON `Hotels`.`id` = `HotelAmenities`.`hotelId` LEFT OUTER JOIN `Amenities` AS `HotelAmenities->Amenity` ON `HotelAmenities`.`amenityId` = `HotelAmenities->Amenity`.`id` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` WHERE `Hotels`.`id` = '23';
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '113.161.34.227',
  'x-forwarded-for': '113.161.34.227',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/hotel/california-hotel/23',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,vi;q=0.8',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU; _csrf=6TmPnOrRhLVZVFd3qwQTsDe3; connect.sid=s%3ATIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH%2F%2B%2FsSBrN%2BxuIc',
  'if-none-match': 'W/"185-PLyrMRiG1or+MQtHSs53pzHBc/0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU',
  _csrf: '6TmPnOrRhLVZVFd3qwQTsDe3',
  'connect.sid': 's:TIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH/+/sSBrN+xuIc'
}
ok
Decode: { userId: 32, name: 'Thảo Trịnh', iat: 1733475018, exp: 1733475918 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 32;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Reviews`.`id`, `Reviews`.`rating`, `Reviews`.`description`, `Reviews`.`file`, `Reviews`.`createdAt`, `Reviews`.`updatedAt`, `Reviews`.`guestId`, `Reviews`.`hotelId`, `Hotel`.`id` AS `Hotel.id`, `Hotel`.`name` AS `Hotel.name`, `User`.`id` AS `User.id`, `User`.`name` AS `User.name`, `User`.`url` AS `User.url` FROM `Reviews` AS `Reviews` LEFT OUTER JOIN `Hotels` AS `Hotel` ON `Reviews`.`hotelId` = `Hotel`.`id` LEFT OUTER JOIN `Users` AS `User` ON `Reviews`.`guestId` = `User`.`id` WHERE `Reviews`.`hotelId` = '23';
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `HotelAmenities`.`id` AS `HotelAmenities.id`, `HotelAmenities`.`hotelId` AS `HotelAmenities.hotelId`, `HotelAmenities`.`amenityId` AS `HotelAmenities.amenityId`, `HotelAmenities`.`createdAt` AS `HotelAmenities.createdAt`, `HotelAmenities`.`updatedAt` AS `HotelAmenities.updatedAt`, `HotelAmenities->Amenity`.`id` AS `HotelAmenities.Amenity.id`, `HotelAmenities->Amenity`.`name` AS `HotelAmenities.Amenity.name`, `HotelAmenities->Amenity`.`class` AS `HotelAmenities.Amenity.class`, `HotelAmenities->Amenity`.`type` AS `HotelAmenities.Amenity.type`, `HotelAmenities->Amenity`.`createdAt` AS `HotelAmenities.Amenity.createdAt`, `HotelAmenities->Amenity`.`updatedAt` AS `HotelAmenities.Amenity.updatedAt`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `HotelAmenities` AS `HotelAmenities` ON `Hotels`.`id` = `HotelAmenities`.`hotelId` LEFT OUTER JOIN `Amenities` AS `HotelAmenities->Amenity` ON `HotelAmenities`.`amenityId` = `HotelAmenities->Amenity`.`id` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` WHERE `Hotels`.`id` = '23';
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '1.55.80.26',
  'x-forwarded-for': '1.55.80.26',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/hotel/california-hotel/23',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,vi;q=0.8',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU; _csrf=6TmPnOrRhLVZVFd3qwQTsDe3; connect.sid=s%3ATIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH%2F%2B%2FsSBrN%2BxuIc',
  'if-none-match': 'W/"185-PLyrMRiG1or+MQtHSs53pzHBc/0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU',
  _csrf: '6TmPnOrRhLVZVFd3qwQTsDe3',
  'connect.sid': 's:TIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH/+/sSBrN+xuIc'
}
ok
Decode: { userId: 32, name: 'Thảo Trịnh', iat: 1733475018, exp: 1733475918 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 32;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): SELECT `Room`.`id`, `Room`.`name`, `Room`.`status`, `Room`.`price`, `Room`.`quantity`, `Room`.`quantity_people`, `Room`.`type_bed`, `Room`.`createdAt`, `Room`.`updatedAt`, `Room`.`hotelId`, `Hotel`.`id` AS `Hotel.id`, `Hotel`.`name` AS `Hotel.name`, `Hotel`.`star` AS `Hotel.star`, `Hotel`.`userRating` AS `Hotel.userRating`, `Hotel`.`map` AS `Hotel.map`, `Hotel`.`TypeHotel` AS `Hotel.TypeHotel`, `Hotel`.`payment` AS `Hotel.payment`, `Hotel`.`cost` AS `Hotel.cost`, `Hotel`.`createdAt` AS `Hotel.createdAt`, `Hotel`.`updatedAt` AS `Hotel.updatedAt`, `Hotel`.`ownerId` AS `Hotel.ownerId`, `roomServices`.`id` AS `roomServices.id`, `roomServices`.`roomId` AS `roomServices.roomId`, `roomServices`.`serviceId` AS `roomServices.serviceId`, `roomServices`.`createdAt` AS `roomServices.createdAt`, `roomServices`.`updatedAt` AS `roomServices.updatedAt`, `roomServices->Amenity`.`id` AS `roomServices.Amenity.id`, `roomServices->Amenity`.`name` AS `roomServices.Amenity.name`, `roomServices->Amenity`.`class` AS `roomServices.Amenity.class`, `roomServices->Amenity`.`type` AS `roomServices.Amenity.type`, `roomServices->Amenity`.`createdAt` AS `roomServices.Amenity.createdAt`, `roomServices->Amenity`.`updatedAt` AS `roomServices.Amenity.updatedAt`, `UrlImageRooms`.`id` AS `UrlImageRooms.id`, `UrlImageRooms`.`url` AS `UrlImageRooms.url`, `UrlImageRooms`.`file_name` AS `UrlImageRooms.file_name`, `UrlImageRooms`.`createdAt` AS `UrlImageRooms.createdAt`, `UrlImageRooms`.`updatedAt` AS `UrlImageRooms.updatedAt`, `UrlImageRooms`.`IdRoom` AS `UrlImageRooms.IdRoom` FROM `Rooms` AS `Room` LEFT OUTER JOIN `Hotels` AS `Hotel` ON `Room`.`hotelId` = `Hotel`.`id` LEFT OUTER JOIN `roomServices` AS `roomServices` ON `Room`.`id` = `roomServices`.`roomId` LEFT OUTER JOIN `Amenities` AS `roomServices->Amenity` ON `roomServices`.`serviceId` = `roomServices->Amenity`.`id` LEFT OUTER JOIN `UrlImageRooms` AS `UrlImageRooms` ON `Room`.`id` = `UrlImageRooms`.`IdRoom` WHERE `Room`.`hotelId` = '23';
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '113.161.34.227',
  'x-forwarded-for': '113.161.34.227',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,vi;q=0.8',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU; _csrf=6TmPnOrRhLVZVFd3qwQTsDe3; connect.sid=s%3ATIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH%2F%2B%2FsSBrN%2BxuIc',
  'if-none-match': 'W/"185-PLyrMRiG1or+MQtHSs53pzHBc/0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJuYW1lIjoiVGjhuqNvIFRy4buLbmgiLCJpYXQiOjE3MzM0NzUwMTgsImV4cCI6MTczMzQ3NTkxOH0.sjmg1E7hgk62euUahApH9YOcpqavTMAPvKAKbNPaJ4w',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU',
  _csrf: '6TmPnOrRhLVZVFd3qwQTsDe3',
  'connect.sid': 's:TIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH/+/sSBrN+xuIc'
}
ok
Decode: { userId: 32, name: 'Thảo Trịnh', iat: 1733475018, exp: 1733475918 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 32;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw'
}
ok
Decode: { userId: 31, name: 'Trung Thành', iat: 1733474961, exp: 1733475861 }
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw'
}
ok
Decode: { userId: 31, name: 'Trung Thành', iat: 1733474961, exp: 1733475861 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
undefined
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/hotel/khach-san-dalat-palace-heritage/25',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw'
}
ok
Decode: { userId: 31, name: 'Trung Thành', iat: 1733474961, exp: 1733475861 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `HotelAmenities`.`id` AS `HotelAmenities.id`, `HotelAmenities`.`hotelId` AS `HotelAmenities.hotelId`, `HotelAmenities`.`amenityId` AS `HotelAmenities.amenityId`, `HotelAmenities`.`createdAt` AS `HotelAmenities.createdAt`, `HotelAmenities`.`updatedAt` AS `HotelAmenities.updatedAt`, `HotelAmenities->Amenity`.`id` AS `HotelAmenities.Amenity.id`, `HotelAmenities->Amenity`.`name` AS `HotelAmenities.Amenity.name`, `HotelAmenities->Amenity`.`class` AS `HotelAmenities.Amenity.class`, `HotelAmenities->Amenity`.`type` AS `HotelAmenities.Amenity.type`, `HotelAmenities->Amenity`.`createdAt` AS `HotelAmenities.Amenity.createdAt`, `HotelAmenities->Amenity`.`updatedAt` AS `HotelAmenities.Amenity.updatedAt`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `HotelAmenities` AS `HotelAmenities` ON `Hotels`.`id` = `HotelAmenities`.`hotelId` LEFT OUTER JOIN `Amenities` AS `HotelAmenities->Amenity` ON `HotelAmenities`.`amenityId` = `HotelAmenities->Amenity`.`id` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` WHERE `Hotels`.`id` = '25';
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): SELECT `Room`.`id`, `Room`.`name`, `Room`.`status`, `Room`.`price`, `Room`.`quantity`, `Room`.`quantity_people`, `Room`.`type_bed`, `Room`.`createdAt`, `Room`.`updatedAt`, `Room`.`hotelId`, `Hotel`.`id` AS `Hotel.id`, `Hotel`.`name` AS `Hotel.name`, `Hotel`.`star` AS `Hotel.star`, `Hotel`.`userRating` AS `Hotel.userRating`, `Hotel`.`map` AS `Hotel.map`, `Hotel`.`TypeHotel` AS `Hotel.TypeHotel`, `Hotel`.`payment` AS `Hotel.payment`, `Hotel`.`cost` AS `Hotel.cost`, `Hotel`.`createdAt` AS `Hotel.createdAt`, `Hotel`.`updatedAt` AS `Hotel.updatedAt`, `Hotel`.`ownerId` AS `Hotel.ownerId`, `roomServices`.`id` AS `roomServices.id`, `roomServices`.`roomId` AS `roomServices.roomId`, `roomServices`.`serviceId` AS `roomServices.serviceId`, `roomServices`.`createdAt` AS `roomServices.createdAt`, `roomServices`.`updatedAt` AS `roomServices.updatedAt`, `roomServices->Amenity`.`id` AS `roomServices.Amenity.id`, `roomServices->Amenity`.`name` AS `roomServices.Amenity.name`, `roomServices->Amenity`.`class` AS `roomServices.Amenity.class`, `roomServices->Amenity`.`type` AS `roomServices.Amenity.type`, `roomServices->Amenity`.`createdAt` AS `roomServices.Amenity.createdAt`, `roomServices->Amenity`.`updatedAt` AS `roomServices.Amenity.updatedAt`, `UrlImageRooms`.`id` AS `UrlImageRooms.id`, `UrlImageRooms`.`url` AS `UrlImageRooms.url`, `UrlImageRooms`.`file_name` AS `UrlImageRooms.file_name`, `UrlImageRooms`.`createdAt` AS `UrlImageRooms.createdAt`, `UrlImageRooms`.`updatedAt` AS `UrlImageRooms.updatedAt`, `UrlImageRooms`.`IdRoom` AS `UrlImageRooms.IdRoom` FROM `Rooms` AS `Room` LEFT OUTER JOIN `Hotels` AS `Hotel` ON `Room`.`hotelId` = `Hotel`.`id` LEFT OUTER JOIN `roomServices` AS `roomServices` ON `Room`.`id` = `roomServices`.`roomId` LEFT OUTER JOIN `Amenities` AS `roomServices->Amenity` ON `roomServices`.`serviceId` = `roomServices->Amenity`.`id` LEFT OUTER JOIN `UrlImageRooms` AS `UrlImageRooms` ON `Room`.`id` = `UrlImageRooms`.`IdRoom` WHERE `Room`.`hotelId` = '25';
Executing (default): SELECT `Reviews`.`id`, `Reviews`.`rating`, `Reviews`.`description`, `Reviews`.`file`, `Reviews`.`createdAt`, `Reviews`.`updatedAt`, `Reviews`.`guestId`, `Reviews`.`hotelId`, `Hotel`.`id` AS `Hotel.id`, `Hotel`.`name` AS `Hotel.name`, `User`.`id` AS `User.id`, `User`.`name` AS `User.name`, `User`.`url` AS `User.url` FROM `Reviews` AS `Reviews` LEFT OUTER JOIN `Hotels` AS `Hotel` ON `Reviews`.`hotelId` = `Hotel`.`id` LEFT OUTER JOIN `Users` AS `User` ON `Reviews`.`guestId` = `User`.`id` WHERE `Reviews`.`hotelId` = '25';
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/hotel/khach-san-dalat-palace-heritage/25',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw'
}
ok
Decode: { userId: 31, name: 'Trung Thành', iat: 1733474961, exp: 1733475861 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `HotelAmenities`.`id` AS `HotelAmenities.id`, `HotelAmenities`.`hotelId` AS `HotelAmenities.hotelId`, `HotelAmenities`.`amenityId` AS `HotelAmenities.amenityId`, `HotelAmenities`.`createdAt` AS `HotelAmenities.createdAt`, `HotelAmenities`.`updatedAt` AS `HotelAmenities.updatedAt`, `HotelAmenities->Amenity`.`id` AS `HotelAmenities.Amenity.id`, `HotelAmenities->Amenity`.`name` AS `HotelAmenities.Amenity.name`, `HotelAmenities->Amenity`.`class` AS `HotelAmenities.Amenity.class`, `HotelAmenities->Amenity`.`type` AS `HotelAmenities.Amenity.type`, `HotelAmenities->Amenity`.`createdAt` AS `HotelAmenities.Amenity.createdAt`, `HotelAmenities->Amenity`.`updatedAt` AS `HotelAmenities.Amenity.updatedAt`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `HotelAmenities` AS `HotelAmenities` ON `Hotels`.`id` = `HotelAmenities`.`hotelId` LEFT OUTER JOIN `Amenities` AS `HotelAmenities->Amenity` ON `HotelAmenities`.`amenityId` = `HotelAmenities->Amenity`.`id` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` WHERE `Hotels`.`id` = '25';
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
undefined
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/hotel/intercontinental-nha-trang-an-ihg-hotel/28',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw'
}
ok
Decode: { userId: 31, name: 'Trung Thành', iat: 1733474961, exp: 1733475861 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `HotelAmenities`.`id` AS `HotelAmenities.id`, `HotelAmenities`.`hotelId` AS `HotelAmenities.hotelId`, `HotelAmenities`.`amenityId` AS `HotelAmenities.amenityId`, `HotelAmenities`.`createdAt` AS `HotelAmenities.createdAt`, `HotelAmenities`.`updatedAt` AS `HotelAmenities.updatedAt`, `HotelAmenities->Amenity`.`id` AS `HotelAmenities.Amenity.id`, `HotelAmenities->Amenity`.`name` AS `HotelAmenities.Amenity.name`, `HotelAmenities->Amenity`.`class` AS `HotelAmenities.Amenity.class`, `HotelAmenities->Amenity`.`type` AS `HotelAmenities.Amenity.type`, `HotelAmenities->Amenity`.`createdAt` AS `HotelAmenities.Amenity.createdAt`, `HotelAmenities->Amenity`.`updatedAt` AS `HotelAmenities.Amenity.updatedAt`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `HotelAmenities` AS `HotelAmenities` ON `Hotels`.`id` = `HotelAmenities`.`hotelId` LEFT OUTER JOIN `Amenities` AS `HotelAmenities->Amenity` ON `HotelAmenities`.`amenityId` = `HotelAmenities->Amenity`.`id` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` WHERE `Hotels`.`id` = '28';
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): SELECT `Room`.`id`, `Room`.`name`, `Room`.`status`, `Room`.`price`, `Room`.`quantity`, `Room`.`quantity_people`, `Room`.`type_bed`, `Room`.`createdAt`, `Room`.`updatedAt`, `Room`.`hotelId`, `Hotel`.`id` AS `Hotel.id`, `Hotel`.`name` AS `Hotel.name`, `Hotel`.`star` AS `Hotel.star`, `Hotel`.`userRating` AS `Hotel.userRating`, `Hotel`.`map` AS `Hotel.map`, `Hotel`.`TypeHotel` AS `Hotel.TypeHotel`, `Hotel`.`payment` AS `Hotel.payment`, `Hotel`.`cost` AS `Hotel.cost`, `Hotel`.`createdAt` AS `Hotel.createdAt`, `Hotel`.`updatedAt` AS `Hotel.updatedAt`, `Hotel`.`ownerId` AS `Hotel.ownerId`, `roomServices`.`id` AS `roomServices.id`, `roomServices`.`roomId` AS `roomServices.roomId`, `roomServices`.`serviceId` AS `roomServices.serviceId`, `roomServices`.`createdAt` AS `roomServices.createdAt`, `roomServices`.`updatedAt` AS `roomServices.updatedAt`, `roomServices->Amenity`.`id` AS `roomServices.Amenity.id`, `roomServices->Amenity`.`name` AS `roomServices.Amenity.name`, `roomServices->Amenity`.`class` AS `roomServices.Amenity.class`, `roomServices->Amenity`.`type` AS `roomServices.Amenity.type`, `roomServices->Amenity`.`createdAt` AS `roomServices.Amenity.createdAt`, `roomServices->Amenity`.`updatedAt` AS `roomServices.Amenity.updatedAt`, `UrlImageRooms`.`id` AS `UrlImageRooms.id`, `UrlImageRooms`.`url` AS `UrlImageRooms.url`, `UrlImageRooms`.`file_name` AS `UrlImageRooms.file_name`, `UrlImageRooms`.`createdAt` AS `UrlImageRooms.createdAt`, `UrlImageRooms`.`updatedAt` AS `UrlImageRooms.updatedAt`, `UrlImageRooms`.`IdRoom` AS `UrlImageRooms.IdRoom` FROM `Rooms` AS `Room` LEFT OUTER JOIN `Hotels` AS `Hotel` ON `Room`.`hotelId` = `Hotel`.`id` LEFT OUTER JOIN `roomServices` AS `roomServices` ON `Room`.`id` = `roomServices`.`roomId` LEFT OUTER JOIN `Amenities` AS `roomServices->Amenity` ON `roomServices`.`serviceId` = `roomServices->Amenity`.`id` LEFT OUTER JOIN `UrlImageRooms` AS `UrlImageRooms` ON `Room`.`id` = `UrlImageRooms`.`IdRoom` WHERE `Room`.`hotelId` = '28';
Executing (default): SELECT `Reviews`.`id`, `Reviews`.`rating`, `Reviews`.`description`, `Reviews`.`file`, `Reviews`.`createdAt`, `Reviews`.`updatedAt`, `Reviews`.`guestId`, `Reviews`.`hotelId`, `Hotel`.`id` AS `Hotel.id`, `Hotel`.`name` AS `Hotel.name`, `User`.`id` AS `User.id`, `User`.`name` AS `User.name`, `User`.`url` AS `User.url` FROM `Reviews` AS `Reviews` LEFT OUTER JOIN `Hotels` AS `Hotel` ON `Reviews`.`hotelId` = `Hotel`.`id` LEFT OUTER JOIN `Users` AS `User` ON `Reviews`.`guestId` = `User`.`id` WHERE `Reviews`.`hotelId` = '28';
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/hotel/intercontinental-nha-trang-an-ihg-hotel/28',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw'
}
ok
Decode: { userId: 31, name: 'Trung Thành', iat: 1733474961, exp: 1733475861 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `HotelAmenities`.`id` AS `HotelAmenities.id`, `HotelAmenities`.`hotelId` AS `HotelAmenities.hotelId`, `HotelAmenities`.`amenityId` AS `HotelAmenities.amenityId`, `HotelAmenities`.`createdAt` AS `HotelAmenities.createdAt`, `HotelAmenities`.`updatedAt` AS `HotelAmenities.updatedAt`, `HotelAmenities->Amenity`.`id` AS `HotelAmenities.Amenity.id`, `HotelAmenities->Amenity`.`name` AS `HotelAmenities.Amenity.name`, `HotelAmenities->Amenity`.`class` AS `HotelAmenities.Amenity.class`, `HotelAmenities->Amenity`.`type` AS `HotelAmenities.Amenity.type`, `HotelAmenities->Amenity`.`createdAt` AS `HotelAmenities.Amenity.createdAt`, `HotelAmenities->Amenity`.`updatedAt` AS `HotelAmenities.Amenity.updatedAt`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `HotelAmenities` AS `HotelAmenities` ON `Hotels`.`id` = `HotelAmenities`.`hotelId` LEFT OUTER JOIN `Amenities` AS `HotelAmenities->Amenity` ON `HotelAmenities`.`amenityId` = `HotelAmenities->Amenity`.`id` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` WHERE `Hotels`.`id` = '28';
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJuYW1lIjoiVHJ1bmcgVGjDoG5oIiwiaWF0IjoxNzMzNDc0OTYxLCJleHAiOjE3MzM0NzU4NjF9.6Ie1yKu-VoIcXG8L8RprCpGOwf8O-f7p92grJ89Hd2o',
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw'
}
ok
Decode: { userId: 31, name: 'Trung Thành', iat: 1733474961, exp: 1733475861 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 32;
Refresh USer User {
  dataValues: {
    id: 32,
    name: 'Thảo Trịnh',
    email: 'thieukhanhvu11204@gmail.com',
    password: null,
    numberPhone: null,
    birthDate: null,
    gender: null,
    type: 'client',
    cccd: null,
    address: null,
    url: 'https://phongreviews.com/wp-content/uploads/2022/11/avatar-facebook-mac-dinh-19.jpg',
    token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU',
    authGgId: '111611747582701534143',
    authType: 'google',
    createdAt: 2024-12-06T08:50:18.000Z,
    updatedAt: 2024-12-06T08:50:18.000Z
  },
  _previousDataValues: {
    id: 32,
    name: 'Thảo Trịnh',
    email: 'thieukhanhvu11204@gmail.com',
    password: null,
    numberPhone: null,
    birthDate: null,
    gender: null,
    type: 'client',
    cccd: null,
    address: null,
    url: 'https://phongreviews.com/wp-content/uploads/2022/11/avatar-facebook-mac-dinh-19.jpg',
    token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU',
    authGgId: '111611747582701534143',
    authType: 'google',
    createdAt: 2024-12-06T08:50:18.000Z,
    updatedAt: 2024-12-06T08:50:18.000Z
  },
  uniqno: 1,
  _changed: Set(0) {},
  _options: {
    isNewRecord: false,
    _schema: null,
    _schemaDelimiter: '',
    raw: true,
    attributes: [
      'id',          'name',
      'email',       'password',
      'numberPhone', 'birthDate',
      'gender',      'type',
      'cccd',        'address',
      'url',         'token',
      'authGgId',    'authType',
      'createdAt',   'updatedAt'
    ]
  },
  isNewRecord: false
}
Token moi eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc2MDcxLCJleHAiOjE3MzM0NzY5NzF9.bqcsC8-kdChEuANwvvYzbodcSNHqpFGmhdh6uk4jeQI
token moi trong cookie eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc2MDcxLCJleHAiOjE3MzM0NzY5NzF9.bqcsC8-kdChEuANwvvYzbodcSNHqpFGmhdh6uk4jeQI
Da refresh token
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '113.161.34.227',
  'x-forwarded-for': '113.161.34.227',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,vi;q=0.8',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU; _csrf=6TmPnOrRhLVZVFd3qwQTsDe3; connect.sid=s%3ATIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH%2F%2B%2FsSBrN%2BxuIc',
  'if-none-match': 'W/"185-PLyrMRiG1or+MQtHSs53pzHBc/0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMyLCJlbWFpbCI6InRoaWV1a2hhbmh2dTExMjA0QGdtYWlsLmNvbSIsImlhdCI6MTczMzQ3NTAxOCwiZXhwIjoxNzM0MDc5ODE4fQ.Dltk2eabf4LgLLtjqDCyhubKfdaR4gWRSacyXCzU2yU',
  _csrf: '6TmPnOrRhLVZVFd3qwQTsDe3',
  'connect.sid': 's:TIKoTrhBXzjNl6gq2LMqIpa978t3-P5L.1YB33RfoBJLHQOQ1sAqJ9U6HcOgjcH/+/sSBrN+xuIc'
}
fail
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`userRating` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`cost` ASC;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): SELECT `id`, `rating`, `description`, `file`, `createdAt`, `updatedAt`, `guestId`, `hotelId` FROM `Reviews` AS `Reviews`;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId` ORDER BY `Hotels`.`star` DESC;
Executing (default): SELECT `Hotels`.`id`, `Hotels`.`name`, `Hotels`.`star`, `Hotels`.`userRating`, `Hotels`.`map`, `Hotels`.`TypeHotel`, `Hotels`.`payment`, `Hotels`.`cost`, `Hotels`.`createdAt`, `Hotels`.`updatedAt`, `Hotels`.`ownerId`, `Reviews`.`id` AS `Reviews.id`, `Reviews`.`rating` AS `Reviews.rating`, `Reviews`.`description` AS `Reviews.description`, `Reviews`.`file` AS `Reviews.file`, `Reviews`.`createdAt` AS `Reviews.createdAt`, `Reviews`.`updatedAt` AS `Reviews.updatedAt`, `Reviews`.`guestId` AS `Reviews.guestId`, `Reviews`.`hotelId` AS `Reviews.hotelId`, `Rooms`.`id` AS `Rooms.id`, `Rooms`.`name` AS `Rooms.name`, `Rooms`.`status` AS `Rooms.status`, `Rooms`.`price` AS `Rooms.price`, `Rooms`.`quantity` AS `Rooms.quantity`, `Rooms`.`quantity_people` AS `Rooms.quantity_people`, `Rooms`.`type_bed` AS `Rooms.type_bed`, `Rooms`.`createdAt` AS `Rooms.createdAt`, `Rooms`.`updatedAt` AS `Rooms.updatedAt`, `Rooms`.`hotelId` AS `Rooms.hotelId`, `UrlImageHotels`.`id` AS `UrlImageHotels.id`, `UrlImageHotels`.`url` AS `UrlImageHotels.url`, `UrlImageHotels`.`file_name` AS `UrlImageHotels.file_name`, `UrlImageHotels`.`createdAt` AS `UrlImageHotels.createdAt`, `UrlImageHotels`.`updatedAt` AS `UrlImageHotels.updatedAt`, `UrlImageHotels`.`HotelId` AS `UrlImageHotels.HotelId` FROM `Hotels` AS `Hotels` LEFT OUTER JOIN `Reviews` AS `Reviews` ON `Hotels`.`id` = `Reviews`.`hotelId` LEFT OUTER JOIN `Rooms` AS `Rooms` ON `Hotels`.`id` = `Rooms`.`hotelId` LEFT OUTER JOIN `UrlImageHotels` AS `UrlImageHotels` ON `Hotels`.`id` = `UrlImageHotels`.`HotelId`;
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 2
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 2 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 2
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 16
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 16 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 16
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 15
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 15 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 15
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 14
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 14 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 14
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 13
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 13 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 13
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 20
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 20 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 20
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 9
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 9 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 9
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 11
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 11 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 11
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 7
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 7 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 7
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 4
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 4 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 4
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 23
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 23 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 23
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 21
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 21 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 21
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 19
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 19 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 19
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 24
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 24 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 24
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 1
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 1 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 1
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 25
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 25 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 25
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 5
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 5 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 5
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 6
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 6 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 6
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 22
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 22 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 22
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 10
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 10 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 10
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 17
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 17 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 17
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 3
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 3 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 3
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 18
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 18 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 18
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 28
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 28 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 28
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 27
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 27 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 27
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 12
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 12 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 12
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 26
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 26 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 26
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 29
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 29 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 29
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 8
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 8 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 8
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 30
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 30 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 30
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET userRating = (
        SELECT ROUND(AVG(r.rating), 1)
        FROM Reviews AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.rating) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Reviews AS r
        WHERE r.hotelId = 31
      )
Executing (default): UPDATE Hotels AS h
      SET cost = (
        SELECT MIN(price)
        FROM Rooms AS r
        WHERE r.hotelId = 31
        HAVING COUNT(r.price) > 0
      )
      WHERE h.id = 31 AND EXISTS (
        SELECT 1
        FROM Rooms AS r
        WHERE r.hotelId = 31
      )
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Refresh USer User {
  dataValues: {
    id: 31,
    name: 'Trung Thành',
    email: 'thanhptt1337@gmail.com',
    password: null,
    numberPhone: null,
    birthDate: null,
    gender: null,
    type: 'client',
    cccd: null,
    address: null,
    url: 'https://phongreviews.com/wp-content/uploads/2022/11/avatar-facebook-mac-dinh-19.jpg',
    token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
    authGgId: '103858586135283261590',
    authType: 'google',
    createdAt: 2024-12-06T08:49:21.000Z,
    updatedAt: 2024-12-06T08:49:21.000Z
  },
  _previousDataValues: {
    id: 31,
    name: 'Trung Thành',
    email: 'thanhptt1337@gmail.com',
    password: null,
    numberPhone: null,
    birthDate: null,
    gender: null,
    type: 'client',
    cccd: null,
    address: null,
    url: 'https://phongreviews.com/wp-content/uploads/2022/11/avatar-facebook-mac-dinh-19.jpg',
    token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
    authGgId: '103858586135283261590',
    authType: 'google',
    createdAt: 2024-12-06T08:49:21.000Z,
    updatedAt: 2024-12-06T08:49:21.000Z
  },
  uniqno: 1,
  _changed: Set(0) {},
  _options: {
    isNewRecord: false,
    _schema: null,
    _schemaDelimiter: '',
    raw: true,
    attributes: [
      'id',          'name',
      'email',       'password',
      'numberPhone', 'birthDate',
      'gender',      'type',
      'cccd',        'address',
      'url',         'token',
      'authGgId',    'authType',
      'createdAt',   'updatedAt'
    ]
  },
  isNewRecord: false
}
Token moi eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4
token moi trong cookie eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4
Da refresh token
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw'
}
fail
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw',
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4'
}
ok
Decode: { userId: 31, type: 'client', iat: 1733477442, exp: 1733478342 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw',
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4'
}
ok
Decode: { userId: 31, type: 'client', iat: 1733477442, exp: 1733478342 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw',
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4'
}
ok
Decode: { userId: 31, type: 'client', iat: 1733477442, exp: 1733478342 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw',
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4'
}
ok
Decode: { userId: 31, type: 'client', iat: 1733477442, exp: 1733478342 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw',
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4'
}
ok
Decode: { userId: 31, type: 'client', iat: 1733477442, exp: 1733478342 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw',
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4'
}
ok
Decode: { userId: 31, type: 'client', iat: 1733477442, exp: 1733478342 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw',
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4'
}
ok
Decode: { userId: 31, type: 'client', iat: 1733477442, exp: 1733478342 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw',
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4'
}
ok
Decode: { userId: 31, type: 'client', iat: 1733477442, exp: 1733478342 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
Headers: {
  host: 'nhom10.movie-app-motphim.com',
  'x-real-ip': '118.71.220.241',
  'x-forwarded-for': '118.71.220.241',
  'x-forwarded-proto': 'https',
  connection: 'close',
  'sec-ch-ua-platform': '"Windows"',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
  'sec-ch-ua-mobile': '?0',
  accept: '*/*',
  'sec-fetch-site': 'same-origin',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  referer: 'https://nhom10.movie-app-motphim.com/aboutUs',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'vi-VN,vi;q=0.9',
  cookie: 'refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo; _csrf=1lI7VnSuFeENmD-XvoNOZBk1; connect.sid=s%3Ad7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj%2FrI3Nw; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4',
  'if-none-match': 'W/"17e-7UpIO7PdocjLqlRDtZkX2iX3Qa0"'
}
Query Params: {}
Body: {}
Cookies: {
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJlbWFpbCI6InRoYW5ocHR0MTMzN0BnbWFpbC5jb20iLCJpYXQiOjE3MzM0NzQ5NjEsImV4cCI6MTczNDA3OTc2MX0.rTfRkowpCps2tBDprtrl2ESsb4heSozYWFssZqsrHoo',
  _csrf: '1lI7VnSuFeENmD-XvoNOZBk1',
  'connect.sid': 's:d7ktzDeX83WfAbgsf0bC5qKhmvoQkGG5.317G5RfR0SM86snYkQ7qCGV5colzEY5bfNJQj/rI3Nw',
  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjMxLCJ0eXBlIjoiY2xpZW50IiwiaWF0IjoxNzMzNDc3NDQyLCJleHAiOjE3MzM0NzgzNDJ9.jSAU7h1E8xtuCBRpUscDvAjMWpevDl7LWdDwDhz6zQ4'
}
ok
Decode: { userId: 31, type: 'client', iat: 1733477442, exp: 1733478342 }
Executing (default): SELECT `id`, `name`, `email`, `password`, `numberPhone`, `birthDate`, `gender`, `type`, `cccd`, `address`, `url`, `token`, `authGgId`, `authType`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 31;
